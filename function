#ifndef INCLUDED_ARV_BIN_PESQUISA
#define INCLUDED_ARV_BIN_PESQUISA

#include <vector>

template<typename T>
class ArvBinPesquisa
{
private:

    struct Node
    {
        static const int LEFT = 0;
        static const int RIGHT = 1;

        Node(T elem)
        :elem(elem)
        {
            childs[LEFT] = nullptr;
            childs[RIGHT] = nullptr;
        }

        T elem;
        Node* childs[2];
    };

public:
    ArvBinPesquisa();
    ~ArvBinPesquisa();

    void inserir(T elem);
    void excluir(T elem);
    bool pesquisar(T elem);

    std::vector<T> travessia();

private:

    void remove(Node* node);
    void insert(Node* node,T elem);
    void acumula(Node* root,std::vector<T>& acumulador);

private:

    Node* root;
};

#include "ArvBinPesquisa.inl"

#endif // INCLUDED_ARV_BIN_PESQUISA
